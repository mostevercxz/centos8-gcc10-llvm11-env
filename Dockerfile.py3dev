FROM centos:8
ENV container docker
RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
systemd-tmpfiles-setup.service ] || rm -f $i; done); \
rm -f /lib/systemd/system/multi-user.target.wants/*;\
rm -f /etc/systemd/system/*.wants/*;\
rm -f /lib/systemd/system/local-fs.target.wants/*; \
rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
rm -f /lib/systemd/system/basic.target.wants/*;\
rm -f /lib/systemd/system/anaconda.target.wants/*;
VOLUME [ "/sys/fs/cgroup", "/data/sbin"]
RUN cd /etc/yum.repos.d && rm -rf *
COPY ./yum.repos.d/ /etc/yum.repos.d/

RUN yum install -y yum-utils wget bzip2 diffutils file \
make cmake3 git autoconf automake unzip zip gcc gcc-c++ zlib-devel  bzip2-devel xz-devel lrzsz \
ncurses-devel readline-devel libevent-devel libssh-devel libcurl-devel sqlite-devel libffi-devel zsh gdb
RUN yum install -y epel-release
RUN yum install -y neovim
RUN rpm -ivh https://packagecloud.io/github/git-lfs/packages/el/8/git-lfs-2.12.1-1.el8.x86_64.rpm/download

RUN yum-config-manager  -y --add-repo=https://copr.fedorainfracloud.org/coprs/carlwgeorge/ripgrep/repo/epel-7/carlwgeorge-ripgrep-epel-7.repo
RUN  yum install -y ripgrep
RUN yum-config-manager -y --disable copr:copr.fedorainfracloud.org:carlwgeorge:ripgrep

RUN rpm --import https://package.perforce.com/perforce.pubkey
COPY perforce.repo /etc/yum.repos.d/
RUN yum install -y helix-p4d
COPY ./pbzip2 /usr/bin
COPY ./pigz /usr/bin

RUN dnf -y --enablerepo=PowerTools install libedit-devel

RUN wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tar.xz
RUN tar -xf Python-3.9.0.tar.xz
ENV OPENSSL_VERSION 1.1.1i
ENV OPENSSL_SHA1 eb684ba4ed31fe2c48062aead75233ecd36882a6

ENV PYTHON_VERSION 3.9.0
ENV PYTHON_MD5 e19e75ec81dd04de27797bf3f9d918fd
ENV OPENSSL_URL https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz
ENV PYTHON_URL https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz
RUN set -x && \
    mkdir -p /tmp/src && \
    cd /tmp/src && \
    curl -sSL $OPENSSL_URL -o openssl.tar.gz && \
    echo "${OPENSSL_SHA1} openssl.tar.gz" | sha1sum -c - && \
    tar zxvf openssl.tar.gz && \
    rm -f openssl.tar.gz && \
    cd openssl-${OPENSSL_VERSION} && \
    ./config && make -j45 && make install && \
    ldconfig

RUN set -x && \
    mkdir -p /tmp/src && \
    cd /tmp/src && \
    curl -sSL $PYTHON_URL -o python.tar.gz && \
    echo "${PYTHON_MD5} python.tar.gz" | md5sum -c - && \
    tar zxvf python.tar.gz && \
    rm -f python.tar.gz && \
    cd Python-${PYTHON_VERSION}

RUN cd Python-${PYTHON_VERSION} && sed -i -e 's/#_socket/_socket/g' Modules/Setup && \
    sed -i -e 's/#SSL=\/usr\/local\/ssl/SSL=\/usr\/local/g' Modules/Setup && \
    sed -i -e 's/#_ssl/_ssl/g' Modules/Setup && \
    sed -i -e 's/#[[:space:]]\+-DUSE_SSL/-DUSE_SSL/g' Modules/Setup && \
    sed -i -e 's/#[[:space:]]\+-L$(SSL)\/lib/-L$(SSL)\/lib/g' Modules/Setup && \
    ./configure && make -j45 && make install

#RUN cd Python-3.9.0 && mkdir my_build && cd my_build && ../configure  --with-ssl --enable-shared && make -j45 && make install
RUN echo "/usr/local/lib" >> /etc/ld.so.conf.d/python3.conf && ldconfig
RUN ln -s  /usr/local/bin/python3.9 /usr/bin/python

# 这些python包应该装在用户目录下,而非污染系统python
# todo,创建用户,添加python包
#COPY ./requirements.txt /root
#RUN pip3 install --user -r requirements.txt

ENV TINI_VERSION v0.19.0
ADD ./tini /tini
EXPOSE 22
LABEL Maintainer="Xiaoxin <xiaoxin@papergames.net>"
LABEL Description="CentOS 8 x6 dev image"
LABEL VERSION="2"
RUN yum install -y libss openssh openssh-server openssh-clients

# 收尾工作,删掉临时目录
ADD start.sh /start.sh
RUN chmod +x /start.sh /tini
RUN echo 'root:Cyberpunk' | chpasswd
RUN useradd -m dev && echo "dev:123456" | chpasswd
RUN echo "dev ALL=(ALL) ALL" >> /etc/sudoers
USER dev
RUN echo "export PATH=~/.local/bin:\$PATH" >> /home/dev/.bash_profile
COPY ./py3/init.vim /home/dev/.config/nvim/init.vim
COPY ./py3/requirements.txt /home/dev/
RUN pip3 install --user -i https://mirrors.cloud.tencent.com/pypi/simple -r /home/dev/requirements.txt
RUN sh -c 'curl -fLo /home/dev/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
RUN nvim -E -s -u ~/.config/nvim/init.vim +PlugInstall +qall;exit 0
USER root
RUN ln -s  /usr/local/bin/python3.9 /usr/bin/python3
ENTRYPOINT ["/tini", "-g", "--"]
CMD /start.sh
